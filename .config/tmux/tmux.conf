# Unbind all keys
unbind-key -a
setw -g mouse on
set -g default-terminal "tmux-256color"

set-option -sg escape-time 10
set-option -g focus-events on

#Defaults
bind-key : command-prompt
bind-key ? list-keys
bind-key space copy-mode #scroll in copy-mode
# bind-key ] paste-buffer
bind-key i display-message

setw -g mode-keys vi
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.

# Change tmux prefix
unbind C-b
set -g prefix C-g
bind C-g send-prefix

# Session management
bind-key $ command-prompt "rename-session '%%'"
bind-key q detach-client
bind-key Q kill-session

# Window management
bind-key C-t new-window
bind-key C-r command-prompt "rename-window '%%'"
bind-key C-p choose-tree
bind-key ] next-window
bind-key [ previous-window
bind-key - last-window
bind-key . swap-window -t +1\; select-window -t +1
bind-key , swap-window -t -1\; select-window -t -1

# Pane management
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key C-d split-window -h -c "#{pane_current_path}"
bind-key C-v split-window -v -c "#{pane_current_path}"
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical
bind-key Enter resize-pane -Z
bind-key C-w if-shell -F '#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}' \
    'send-keys C-w' \
    'confirm-before -p "Close pane? (y/n)" kill-pane'
bind-key -n C-d if-shell -F '#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}' \
    'send-keys C-d' \
    'display-message "C-d is disabled in shell to prevent accidental pane closure"'
bind-key -n C-k if-shell -F '#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}' \
    'send-keys C-k' \
    'clear-history'

# Tmux Resurrect
set -g @resurrect-save '9'
set -g @resurrect-restore '0'

# Statusbar <Catppuccin>
set -g @catppuccin_flavor 'frappe' # latte, frappe, macchiato or mocha
set -g @catppuccin_status_background "none" # default, none, #{@thm_<hex_or_theme>}

# Menu styling options
set -ogq @catppuccin_menu_selected_style "fg=#{@thm_fg},bold,bg=#{@thm_overlay_0}"

# Pane styling options
set -ogq @catppuccin_pane_status_enabled "yes" # 'yes' 'off'
set -ogq @catppuccin_pane_border_status "yes" # 'yes' 'off'
set -ogq @catppuccin_pane_border_style "fg=#{@thm_overlay_0}"
set -ogq @catppuccin_pane_active_border_style "##{?pane_in_mode,fg=#{@thm_lavender},##{?pane_synchronized,fg=#{@thm_mauve},fg=#{@thm_lavender}}}"
set -ogq @catppuccin_pane_left_separator "█"
set -ogq @catppuccin_pane_middle_separator "█"
set -ogq @catppuccin_pane_right_separator "█"
set -ogq @catppuccin_pane_color "#{@thm_green}"
set -ogq @catppuccin_pane_background_color "#{@thm_surface_0}"
set -ogq @catppuccin_pane_default_text "##{b:pane_current_path}"
set -ogq @catppuccin_pane_default_fill "number"
set -ogq @catppuccin_pane_number_position "left" # right, left

set -ogq @catppuccin_window_status_style "rounded" # basic, rounded, slanted, custom, or none
set -ogq @catppuccin_window_text_color "#{@thm_surface_0}"
set -ogq @catppuccin_window_number_color "#{@thm_surface_1}"
set -ogq @catppuccin_window_text " #W"
set -ogq @catppuccin_window_number "#I"
set -ogq @catppuccin_window_current_text_color "#{@thm_surface_1}"
set -ogq @catppuccin_window_current_number_color "#{?client_prefix,#{E:@thm_red},#{E:@thm_mauve}}"
set -ogq @catppuccin_window_current_text " #W(#{window_panes})"
set -ogq @catppuccin_window_current_number "#I"
set -ogq @catppuccin_window_number_position "left"
set -ogq @catppuccin_window_flags "icon" # none, icon, or text
set -ogq @catppuccin_window_flags_icon_last " 󰖰" # -
set -ogq @catppuccin_window_flags_icon_current " 󰖯" # *
set -ogq @catppuccin_window_flags_icon_zoom " 󰁌" # Z
set -ogq @catppuccin_window_flags_icon_mark " 󰃀" # M
set -ogq @catppuccin_window_flags_icon_silent " 󰂛" # ~
set -ogq @catppuccin_window_flags_icon_activity " 󱅫" # #
set -ogq @catppuccin_window_flags_icon_bell " 󰂞" # !
set -ogq @catppuccin_window_flags_icon_format "##{?window_activity_flag,#{E:@catppuccin_window_flags_icon_activity},}##{?window_bell_flag,#{E:@catppuccin_window_flags_icon_bell},}##{?window_silence_flag,#{E:@catppuccin_window_flags_icon_silent},}##{?window_active,#{E:@catppuccin_window_flags_icon_current},}##{?window_last_flag,#{E:@catppuccin_window_flags_icon_last},}##{?window_marked_flag,#{E:@catppuccin_window_flags_icon_mark},}##{?window_zoomed_flag,#{E:@catppuccin_window_flags_icon_zoom},} "

# Status line options
set -ogq @catppuccin_status_left_separator ""
set -ogq @catppuccin_status_middle_separator ""
set -ogq @catppuccin_status_right_separator "█"
set -ogq @catppuccin_status_connect_separator "yes" # yes, no
set -ogq @catppuccin_status_fill "icon"
set -ogq @catppuccin_status_module_bg_color "#{@thm_surface_0}"

run '~/.config/tmux/plugins/tmux/catppuccin.tmux'

# Styling Windows
set -g automatic-rename on
set -g status-position bottom
set -g status-justify "left"
set-option -g status-interval 1

# Left
set -g status-left-length 100
set -g status-left ""

# Right
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#{E:@catppuccin_status_directory}"
set -ga status-right "#{E:@catppuccin_status_application}"
set -ga status-right "#{E:@catppuccin_status_date_time}"

#--------------------------------------
# Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Check if TMP is installed, otherwise, install
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Default keybindings
bind I run '~/.config/tmux/plugins/tpm/bin/install_plugins'
bind U run '~/.config/tmux/plugins/tpm/bin/update_plugins'
bind c run '~/.config/tmux/plugins/tpm/bin/clean_plugins'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
