# Unbind all keys
unbind-key -a
set -g mouse
set -g default-terminal "tmux-256color"

#Defaults
bind-key : command-prompt
bind-key ? list-keys
# bind-key [ copy-mode
# bind-key ] paste-buffer
bind-key i display-message
bind-key d detach-client
bind-key l last-window

# Change tmux prefix
unbind C-b
set -g prefix C-g
bind C-g send-prefix

# Session management
bind-key $ command-prompt "rename-session '%%'"

# Window management
bind-key C-t new-window
bind-key C-r command-prompt "rename-window '%%'"
bind-key C-p choose-tree
bind-key ] next-window
bind-key [ previous-window

# Pane management
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key C-d split-window -h -c "#{pane_current_path}"
bind-key C-v split-window -v -c "#{pane_current_path}"
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical
bind-key Enter resize-pane -Z
bind-key -n C-w confirm-before -p "Close pane? (y/n)" kill-pane
bind-key -n C-d if-shell -F '#{||:#{==:#{pane_current_command},vim},#{==:#{pane_current_command},nvim}}' \
    'send-keys C-d' \
    'display-message "C-d is disabled in shell to prevent accidental pane closure"'

# Tmux Resurrect
set -g @resurrect-save '9'
set -g @resurrect-restore '0'

# Statusbar <Catppuccin>
set -g @catppuccin_flavor 'macchiato' # latte, frappe, macchiato or mocha
set -g @catppuccin_status_background "none" # default, none, #{@thm_<hex_or_theme>}
set -g @catppuccin_window_status_style "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

# Styling
set -g status-position top
set -g status-style "bg=default"
set -g status-justify "absolute-centre"
set-option -s status-interval 1

# Windows
set -g automatic-rename on
set -g automatic-rename-format 'Window'
set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=default,fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=default,fg=#{@thm_peach}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[bg=default,fg=#{@thm_overlay_0}]│"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"

# Left
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_blue},fg=#{@thm_bg},bold]  },#{#[bg=default,fg=#{@thm_blue}]  }}"
set -ga status-left "#[bg=default,fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=default,fg=#{@thm_maroon}]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
set -ga status-left "#[bg=default,fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,│,}"
set -ga status-left "#[bg=default,fg=#{@thm_yellow}]#{?window_zoomed_flag,  zoom ,}"
set -ga status-left "#[bg=default,fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,│,}"

# Right
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#[bg=default,fg=#{@thm_overlay_0},none] │ "
set -ga status-right "#[bg=default,fg=#{@thm_maroon}] #{pane_current_command}"
set -ga status-right "#[bg=default,fg=#{@thm_overlay_0},none] │ "
set -ga status-right "#{?#{e|>:#{window_width},130},#{#[fg=#{@thm_lavender}]󰃶 %Y-%m-%d},#{#[fg=#{@thm_lavender}]󰃶}}"
set -ga status-right "#[bg=default,fg=#{@thm_overlay_0},none] │ "
set -ga status-right "#{?#{e|>:#{window_width},100},#{#[fg=#{@thm_lavender}]󰅐 %H:%M},#{#[fg=#{@thm_lavender}]󰅐}}"
set -ga status-right "#[fg=#{@thm_overlay_0}, none] "

#--------------------------------------
# Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Check if TMP is installed, otherwise, install
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Default keybindings
bind I run '~/.tmux/plugins/tpm/bin/install_plugins'
bind U run '~/.tmux/plugins/tpm/bin/update_plugins'
bind c run '~/.tmux/plugins/tpm/bin/clean_plugins'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
