{
  "mcpServers": {
    "atlassian": {
      "args": ["-y", "mcp-remote", "https://mcp.atlassian.com/v1/sse"],
      "command": "npx",
      "disabled": false
    },
    "context7": {
      "autoApprove": ["resolve-library-id", "get-library-docs"],
      "type": "streamable-http",
      "url": "https://mcp.context7.com/mcp"
    },
    "fetch": {
      "args": ["mcp-server-fetch"],
      "autoApprove": ["fetch"],
      "command": "uvx"
    },
    "filesystem": {
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "~/"],
      "autoApprove": [
        "get_file_info",
        "directory_tree",
        "list_allowed_directories",
        "list_directory",
        "list_directory_with_sizes",
        "read_file",
        "read_media_file",
        "read_multiple_files",
        "read_text_file",
        "search_files"
      ],
      "command": "npx",
      "disabled": false
    },
    "github": {
      "autoApprove": [
        "assign_copilot_to_issue",
        "cancel_workflow_run",
        "create_and_submit_pull_request_review",
        "dismiss_notification",
        "download_workflow_run_artifact",
        "fork_repository",
        "get_code_scanning_alert",
        "get_commit",
        "get_dependabot_alert",
        "get_discussion",
        "get_discussion_comments",
        "get_file_contents",
        "get_issue",
        "get_issue_comments",
        "get_job_logs",
        "get_me",
        "get_notification_details",
        "get_pull_request",
        "get_pull_request_comments",
        "get_pull_request_diff",
        "get_pull_request_files",
        "get_pull_request_reviews",
        "get_pull_request_status",
        "get_secret_scanning_alert",
        "get_tag",
        "get_workflow_run",
        "get_workflow_run_logs",
        "get_workflow_run_usage",
        "list_branches",
        "list_code_scanning_alerts",
        "list_commits",
        "list_dependabot_alerts",
        "list_discussion_categories",
        "list_discussions",
        "list_issues",
        "list_notifications",
        "list_pull_requests",
        "list_secret_scanning_alerts",
        "list_tags",
        "list_workflow_jobs",
        "list_workflow_run_artifacts",
        "list_workflow_runs",
        "list_workflows",
        "manage_repository_notification_subscription",
        "merge_pull_request",
        "request_copilot_review",
        "rerun_failed_jobs",
        "rerun_workflow_run",
        "run_workflow",
        "search_code",
        "search_issues",
        "search_orgs",
        "search_pull_requests",
        "search_repositories",
        "search_users",
        "submit_pending_pull_request_review"
      ],
      "disabled": false,
      "headers": {
        "Authorization": "Bearer ${cmd: gh auth token}"
      },
      "url": "https://api.githubcopilot.com/mcp/"
    },
    "sequentialthinking": {
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "autoApprove": ["sequentialthinking"],
      "command": "npx",
      "disabled": false
    }
  },
  "nativeMCPServers": {
    "mcphub": {
      "autoApprove": ["get_current_servers", "toggle_mcp_server"],
      "disabled": false
    },
    "neovim": {
      "autoApprove": [
        "execute_lua",
        "read_file",
        "read_multiple_files",
        "find_files",
        "list_directory",
        "execute_command"
      ],
      "disabled_resources": [],
      "disabled_tools": []
    }
  }
}
